//参考http://blog.csdn.net/loveyou11111111/article/details/48846095，mark一下
#include<iostream>
#include<stack>
#include<map>
#include<algorithm>
#include<string>
using namespace std;
string line;
map<long long, int> base;
map<long long, int>::iterator it;
int sum;
void dfs(int depth, int s, int e) {
	if (line[s] == '[') {
		int counter = 0;
		for (int i = s + 1; i < e; i++) {
			if (line[i] == '[')++counter;
			if (line[i] == ']')--counter;
			if (counter == 0 && line[i] == ',') {//不懂输入格式是啥样的
				dfs(depth + 1, s + 1, i - 1);
				dfs(depth + 1, i + 1, e - 1);
			}
		}
	}
	else {
		long long w = 0;
		for (int i = s; i <= e; i++) w = w * 10 + line[i] - '0';
		++sum;
		++base[w << depth];
	}
}
int main() {
	int t;
	cin >> t;
	while (t--) {
		cin >> line;
		base.clear();
		sum = 0;
		dfs(0, 0, line.size() - 1);
		int maxn = 0;
		for (it = base.begin(); it != base.end(); ++it) {
			maxn = max(maxn, it->second);
		}
		cout << sum - maxn << endl;
		return 0;
	}
}
